#!/bin/bash

--python() {
  install() {
    if not_install python3; then
      brew install python
    fi
    verify python3
    verify pip3

    if not_install powerline-shell; then
      pip3 install powerline-shell
    fi
    verify powerline-shell
  }
  uninstall() {
    log_uninstalling python
    rm -rf ~/Library/Python
  }
  $@
}
--zsh() {
  install() {
    if [ ! -d ~/.oh-my-zsh ]; then
      log_installing zsh
      sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
    fi

    if [ ! -d ~/.zsh/zsh-autosuggestions ]; then
      log_installing 'zsh-autosuggestions'
      git clone https://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions
    fi

    if [ ! -d ~/.zsh/zsh-syntax-highlighting ]; then
      log_installing 'zsh-syntax-highlighting'
      git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.zsh/zsh-syntax-highlighting
      echo "source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> ${ZDOTDIR:-$HOME}/.zshrc
    fi
  }
  uninstall() {
    if [ -d ~/.oh-my-zsh ]; then
      log_uninstalling zsh
      rm -rf ~/.oh-my-zsh
      rm -rf ~/.zsh
      rm ~/.zshrc*
    fi
  }
  $@
}
--iterm2() {
  install() {
    if [ ! -d /Applications/iTerm.app ]; then
      log_installing iterm2
      brew cask install iterm2
    fi
  }
  $@
}
config() {
  vim() {
    rm ~/.vimrc
    ln -s ~/mac-setup/.vimrc ~/.vimrc
    readlink ~/.vimrc
  }
  gitignore_global() {
    rm ~/.gitignore_global
    ln -s ~/mac-setup/.gitignore_global ~/.gitignore_global
    readlink ~/.gitignore_global
  }
  zsh() {
    rm ~/.zshrc
    ln -s ~/mac-setup/.zshrc ~/.zshrc
    readlink ~/.zshrc
  }
  powerline-shell() {
    mkdir -p ~/.config/powerline-shell
    rm ~/.config/powerline-shell/config.json
    ln -s ~/mac-setup/powerline-shell/config.json ~/.config/powerline-shell/config.json
    readlink ~/.config/powerline-shell/config.json
  }
  gem() {
    rm ~/.gemrc
    ln -s ~/mac-setup/.gemrc ~/.gemrc
    readlink ~/.gemrc
  }
  vmd() {
    rm ~/.vmdrc
    ln -s ~/mac-setup/.vmdrc ~/.vmdrc
    readlink ~/.vmdrc
  }
  iterm2() {
    cp ~/mac-setup/iterm2/com.googlecode.iterm2.plist ~/Library/Preferences/com.googlecode.iterm2.plist
  }
  spectacle() {
    mkdir -p ~/Library/Application\ Support/Spectacle
    rm ~/Library/Application\ Support/Spectacle/Shortcuts.json
    ln -s ~/mac-setup/spectacle/Shortcuts.json ~/Library/Application\ Support/Spectacle/Shortcuts.json
    readlink ~/Library/Application\ Support/Spectacle/Shortcuts.json
  }
  vscode() {
    if [ -d ~/Library/Application\ Support/Code/User ]; then
      rm ~/Library/Application\ Support/Code/User/settings.json 
      rm ~/Library/Application\ Support/Code/User/keybindings.json
      ln -s ~/mac-setup/vscode/settings.json ~/Library/Application\ Support/Code/User/settings.json
      ln -s ~/mac-setup/vscode/keybindings.json ~/Library/Application\ Support/Code/User/keybindings.json
      readlink ~/Library/Application\ Support/Code/User/*.json
    fi
  }
  vim
  gitignore_global
  zsh
  powerline-shell
  gem
  vmd
  run fonts install
  iterm2
  spectacle
}

clone_or_pull() {
  if [ -d ~/mac-setup ]; then
    (cd ~/mac-setup; git add . && git stash --quiet && git pull)
  else
    git clone https://github.com/blcsntb/mac-setup ~/mac-setup
  fi
}

run() {
  ~/mac-setup/$1/$@
}

all() {
  run brew install
  --python install
  run rbenv install
  run nvm install
  if [ ! "$CI" ]; then
    --zsh install
  fi
  --iterm2 install
  config
}

source ~/mac-setup/lib

if [ "$1" == "all" ]; then
  clone_or_pull
  all
elif [ ! "$1" == "" ]; then
  run $@
fi
